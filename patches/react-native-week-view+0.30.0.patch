diff --git a/node_modules/react-native-week-view/index.d.ts b/node_modules/react-native-week-view/index.d.ts
index 0c8937a..531586b 100644
--- a/node_modules/react-native-week-view/index.d.ts
+++ b/node_modules/react-native-week-view/index.d.ts
@@ -242,6 +242,7 @@ export interface WeekViewProps {
 
   // Other props (patch RN bugs)
   prependMostRecent?: boolean;
+  customHeaderData?: any;
 }
 
 declare const WeekView: React.ComponentType<WeekViewProps>;
diff --git a/node_modules/react-native-week-view/src/Events/Events.js b/node_modules/react-native-week-view/src/Events/Events.js
index 5784d33..24edeb8 100644
--- a/node_modules/react-native-week-view/src/Events/Events.js
+++ b/node_modules/react-native-week-view/src/Events/Events.js
@@ -1,4 +1,4 @@
-import React, { PureComponent } from 'react';
+import React, { PureComponent, useEffect } from 'react';
 import PropTypes from 'prop-types';
 import { View } from 'react-native';
 import Animated, {
@@ -44,11 +44,19 @@ const Lines = ({ initialDate, times, gridRowStyle }) => {
   const heightStyle = useAnimatedStyle(() => ({
     height: withTiming(timeLabelHeight.value),
   }));
+  useEffect(() => {
+    // console.log('times ---0--> ', times)
+  }, [times])
   return times.map((time) => (
     <Animated.View
       key={`${initialDate}-${time}`}
       style={[styles.timeRow, gridRowStyle, heightStyle]}
-    />
+    >
+      <View style={{ flex: 1 }} />
+      <View style={[styles.timeRow,{flex: 1, borderTopWidth: 1,borderColor: '#E9EDF066'}]} />
+      <View style={[styles.timeRow,{flex: 1,borderTopWidth: 1,borderColor: '#E9EDF066'}]} />
+      <View style={[styles.timeRow,{flex: 1, borderTopWidth: 1,borderColor: '#E9EDF066'}]} />
+    </Animated.View>
   ));
 };
 
@@ -84,6 +92,8 @@ class Events extends PureComponent {
       .seconds(secondsInDay)
       .toDate();
 
+      console.log('dateWithTime ----> ', dateWithTime)
+
     callback(pressEvt, dateWithTime.getHours(), dateWithTime);
   };
 
diff --git a/node_modules/react-native-week-view/src/Header/Header.js b/node_modules/react-native-week-view/src/Header/Header.js
index f3e86bd..d72d9e1 100644
--- a/node_modules/react-native-week-view/src/Header/Header.js
+++ b/node_modules/react-native-week-view/src/Header/Header.js
@@ -1,6 +1,6 @@
-import React from 'react';
+import React, { useEffect } from 'react';
 import PropTypes from 'prop-types';
-import { View, FlatList } from 'react-native';
+import { View, FlatList, Text } from 'react-native';
 import { useDerivedValue } from 'react-native-reanimated';
 
 import AllDayEvents, { ALL_DAY_EVENT_HEIGHT } from './AllDayEvents';
@@ -10,6 +10,7 @@ import HeaderDay from './HeaderDay';
 import { useHeaderRefContext } from '../utils/HorizontalScroll';
 import { PAGES_OFFSET } from '../utils/pages';
 import { AllDayEventsWithMetaPropType } from '../utils/types';
+import moment from 'moment';
 
 const identity = (item) => item;
 
@@ -30,10 +31,56 @@ const HeaderPage = ({
   EventComponent,
   onEventPress,
   onEventLongPress,
+  //custom changes
+  isCustom,
+  customHeaderData,
+  customDate
 }) => {
   const days = calculateDaysArray(initialDate, numberOfDays, rightToLeft) || [];
+  const headerData = isCustom && customHeaderData?.length ? customHeaderData?.map((item) => {
+    return {location: item, timeStamp: customDate, dateS: moment(customDate).format('YYYY-MM-DD')}
+  }) : days;
+  useEffect(() => {
+    // let arr = customHeaderData.map((item) => {
+
+    //   return {location: item, date: customDate}
+    // })
+    // console.log(days)
+    // console.log('------> ',moment(customDate).format('DD MMM YYYY'))
+  }, [days])
   return (
     <View style={styles.container}>
+      {
+        customHeaderData?.length ?
+        <View style={styles.daysContainer}>
+        {headerData.map((item, index) => (
+          <HeaderDay
+            style={style}
+            textStyle={textStyle}
+            key={index} //changed
+            day={item.dateS} //changed
+            location={item.location}
+            format={formatDate}
+            DayComponent={DayComponent}
+            TodayComponent={TodayComponent}
+            onDayPress={onDayPress}
+            width={dayWidth}
+          />
+        //  <View key={index} style={[{
+        //   width: dayWidth,
+        //   flex: 1,
+        //   alignItems: 'center',
+        //   justifyContent: 'center',
+        //   borderLeftWidth: 1,
+        //   borderBottomWidth: 1,
+        //   borderColor: 'black',
+        //   }, style]}>
+        //   <Text style={[{fontSize: 12,color: 'black',}, textStyle]}>
+        //     {item.location}
+        //   </Text>
+        //  </View>
+        ))}
+      </View>:
       <View style={styles.daysContainer}>
         {days.map((day) => (
           <HeaderDay
@@ -48,8 +95,9 @@ const HeaderPage = ({
             width={dayWidth}
           />
         ))}
-      </View>
-      <AllDayEvents
+      </View>}
+      {/* } */}
+      {/* <AllDayEvents
         style={style}
         allDayEvents={allDayEvents}
         days={days}
@@ -59,7 +107,7 @@ const HeaderPage = ({
         EventComponent={EventComponent}
         onEventPress={onEventPress}
         onEventLongPress={onEventLongPress}
-      />
+      /> */}
     </View>
   );
 };
@@ -88,6 +136,10 @@ const WeekViewHeader = ({
   initialNumToRender,
   maxToRenderPerBatch,
   updateCellsBatchingPeriod,
+  //custom changes
+  isCustom,
+  customHeaderData,
+  customDate
 }) => {
   const headerRef = useHeaderRefContext();
 
@@ -119,6 +171,10 @@ const WeekViewHeader = ({
       EventComponent={EventComponent}
       onEventPress={onEventPress}
       onEventLongPress={onEventLongPress}
+      //custom changes
+      isCustom={isCustom}
+      customHeaderData={customHeaderData}
+      customDate={customDate}
     />
   );
 
@@ -169,6 +225,10 @@ WeekViewHeader.propTypes = {
   initialNumToRender: PropTypes.number,
   maxToRenderPerBatch: PropTypes.number,
   updateCellsBatchingPeriod: PropTypes.number,
+  //custom changes
+  isCustom: PropTypes.bool,
+  customHeaderData: PropTypes.array,
+  customDate: PropTypes.any
 };
 
 WeekViewHeader.defaultProps = {
diff --git a/node_modules/react-native-week-view/src/Header/HeaderDay.js b/node_modules/react-native-week-view/src/Header/HeaderDay.js
index f97e457..7b2a7ea 100644
--- a/node_modules/react-native-week-view/src/Header/HeaderDay.js
+++ b/node_modules/react-native-week-view/src/Header/HeaderDay.js
@@ -8,9 +8,13 @@ import styles from './HeaderDay.styles';
 const DefaultDayComponent = ({ textStyle, formattedDate }) => (
   <Text style={[styles.text, textStyle]}>{formattedDate}</Text>
 );
+const CustomLocationComponent = ({ textStyle, title }) => (
+  <Text style={[styles.text, textStyle]}>{title}</Text>
+);
 
 const HeaderDay = ({
   day,
+  location,
   format,
   style,
   textStyle,
@@ -18,11 +22,11 @@ const HeaderDay = ({
   TodayComponent,
   onDayPress,
   width,
+
 }) => {
   const dateObj = moment(day);
   const formattedDate = dateObj.format(format);
   const isToday = moment().isSame(dateObj, 'days');
-
   const ComponentChosen =
     DayComponent || (isToday && TodayComponent) || DefaultDayComponent;
 
@@ -32,18 +36,22 @@ const HeaderDay = ({
       onPress={() => onDayPress && onDayPress(dateObj.toDate(), formattedDate)}
       disabled={!onDayPress}
     >
-      <ComponentChosen
+      {
+        false ?
+        <ComponentChosen
         date={day}
         formattedDate={formattedDate}
         textStyle={textStyle}
         isToday={isToday}
-      />
+        /> : <CustomLocationComponent textStyle={textStyle} title={location} />
+      }
     </TouchableOpacity>
   );
 };
 
 HeaderDay.propTypes = {
   day: PropTypes.string.isRequired,
+  location: PropTypes.string.isRequired,
   format: PropTypes.string,
   style: PropTypes.object,
   textStyle: PropTypes.object,
diff --git a/node_modules/react-native-week-view/src/WeekView/WeekView.js b/node_modules/react-native-week-view/src/WeekView/WeekView.js
index a77c9a9..b0c3f41 100644
--- a/node_modules/react-native-week-view/src/WeekView/WeekView.js
+++ b/node_modules/react-native-week-view/src/WeekView/WeekView.js
@@ -520,6 +520,11 @@ export default class WeekView extends Component {
       disableVirtualization,
       runOnJS,
       onTimeScrolled,
+      //custom changes
+      isCustom,
+      customHeaderData,
+      horizontalScrollEnabled,
+      customDate
     } = this.props;
     const {
       currentMoment,
@@ -602,6 +607,10 @@ export default class WeekView extends Component {
               initialNumToRender={initialNumToRender}
               maxToRenderPerBatch={maxToRenderPerBatch}
               updateCellsBatchingPeriod={updateCellsBatchingPeriod}
+              //custom changes
+              isCustom={isCustom}
+              customHeaderData={customHeaderData}
+              customDate={customDate}
             />
           </View>
           {isRefreshing && RefreshComponent && (
@@ -636,7 +645,8 @@ export default class WeekView extends Component {
                     getItemLayout={this.getListItemLayout}
                     keyExtractor={identity}
                     initialScrollIndex={PAGES_OFFSET}
-                    scrollEnabled={!fixedHorizontally}
+                    // scrollEnabled={!fixedHorizontally}
+                    scrollEnabled={horizontalScrollEnabled}
                     horizontal
                     // eslint-disable-next-line react/jsx-props-no-spreading
                     {...horizontalScrollProps}
@@ -679,6 +689,8 @@ export default class WeekView extends Component {
                           editingEventId={editingEvent}
                           editEventConfig={editEventConfig}
                           dragEventConfig={dragEventConfig}
+                          //custom changes
+                          customDate={customDate}
                         />
                       );
                     }}
@@ -751,6 +763,11 @@ WeekView.propTypes = {
   removeClippedSubviews: PropTypes.bool,
   disableVirtualization: PropTypes.bool,
   runOnJS: PropTypes.bool,
+    //custom changes
+  isCustom: PropTypes.bool,
+  customHeaderData: PropTypes.array,
+  horizontalScrollEnabled: PropTypes.bool,
+  customDate: PropTypes.any
 };
 
 WeekView.defaultProps = {
@@ -775,4 +792,9 @@ WeekView.defaultProps = {
   removeClippedSubviews: true,
   disableVirtualization: false,
   runOnJS: false,
+  //custom changes
+  isCustom: false,
+  customHeaderData: [],
+  horizontalScrollEnabled: true,
+  customDate: new Date().getTime()
 };
